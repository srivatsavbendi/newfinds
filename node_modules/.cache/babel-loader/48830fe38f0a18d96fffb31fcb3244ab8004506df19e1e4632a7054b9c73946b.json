{"ast":null,"code":"var _jsxFileName = \"/Users/srivatsavbendi/Desktop/newsletters/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst newsletters = [\n// Sample newsletter data with attributes: \"Topic\", \"Frequency\", \"Content Type\"\n// Replace placeholders with actual data\n{\n  name: 'Newsletter 1',\n  logo: 'logo1.png',\n  description: 'Description of Newsletter 1',\n  topic: ['Climate', 'Technology'],\n  frequency: ['Daily'],\n  content: 'Short'\n}, {\n  name: 'Newsletter 2',\n  logo: 'logo2.png',\n  description: 'Description of Newsletter 2',\n  topic: ['Travel'],\n  frequency: ['Weekly'],\n  content: 'Medium'\n}\n// Add more newsletters...\n];\n\nconst App = () => {\n  _s();\n  const [step, setStep] = useState(1);\n  const [answers, setAnswers] = useState({});\n  const topicOptions = ['Climate', 'Technology', 'Business', 'Travel', 'Sports', 'Lifestyle', 'Productivity', 'Arts'];\n  const frequencyOptions = ['Daily', 'Biweekly', 'Weekly'];\n  const contentOptions = ['Short', 'Medium', 'Long'];\n  const handleCheckboxChange = option => {\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      1: prevAnswers[1] ? [...prevAnswers[1], option] : [option]\n    }));\n  };\n  const handleCheckboxChange2 = option => {\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      2: prevAnswers[2] ? [...prevAnswers[2], option] : [option]\n    }));\n  };\n  const handleCheckboxChange3 = option => {\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      3: prevAnswers[3] ? [...prevAnswers[3], option] : [option]\n    }));\n  };\n  const handleNextClick = () => {\n    setStep(step + 1);\n    console.log(\"Selected topics:\", answers[1]);\n    console.log(\"Selected frequencies:\", answers[2]);\n    console.log(\"Selected topics:\", answers[3]);\n    recommendNewsletters();\n  };\n  const recommendNewsletters = () => {\n    const userTopics = answers[1] || [];\n    const userFrequencies = answers[2] || [];\n    const userContentPreference = answers[3];\n    const recommendedNewsletters = newsletters.map(newsletter => {\n      let points = 0;\n      newsletter.topic.forEach(topic => {\n        if (userTopics.includes(topic)) {\n          points++;\n        }\n      });\n      newsletter.frequency.forEach(frequency => {\n        if (userFrequencies.includes(frequency)) {\n          points++;\n        }\n      });\n      if (newsletter.content === userContentPreference) {\n        points++;\n      }\n      return {\n        ...newsletter,\n        points\n      };\n    });\n    const sortedRecommendedNewsletters = recommendedNewsletters.sort((a, b) => b.points - a.points).slice(0, 5);\n    console.log(sortedRecommendedNewsletters);\n    setRecommended(sortedRecommendedNewsletters);\n  };\n  const [recommended, setRecommended] = useState([]);\n  const renderQuestion = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"m-2\",\n          children: \"Pick Topics You're Interested In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: topicOptions.map((option, index) => {\n            var _answers$, _answers$2;\n            return /*#__PURE__*/_jsxDEV(\"label\", {\n              className: `btn btn-outline-primary m-2 ${(_answers$ = answers[1]) !== null && _answers$ !== void 0 && _answers$.includes(option) ? 'active' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"btn-check\",\n                checked: (_answers$2 = answers[1]) === null || _answers$2 === void 0 ? void 0 : _answers$2.includes(option),\n                onChange: () => handleCheckboxChange(option)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), option]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"m-2\",\n          children: \"How often would you like to receieve emails?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: frequencyOptions.map((option, index) => {\n            var _answers$3, _answers$4;\n            return /*#__PURE__*/_jsxDEV(\"label\", {\n              className: `btn btn-outline-primary m-2 ${(_answers$3 = answers[2]) !== null && _answers$3 !== void 0 && _answers$3.includes(option) ? 'active' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"btn-check\",\n                checked: (_answers$4 = answers[2]) === null || _answers$4 === void 0 ? void 0 : _answers$4.includes(option),\n                onChange: () => handleCheckboxChange2(option)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), option]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"m-2\",\n          children: \"What is the ideal length of the email?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [contentOptions.map((option, index) => {\n            var _answers$5, _answers$6;\n            return /*#__PURE__*/_jsxDEV(\"label\", {\n              className: `btn btn-outline-primary m-2 ${(_answers$5 = answers[3]) !== null && _answers$5 !== void 0 && _answers$5.includes(option) ? 'active' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"btn-check\",\n                checked: (_answers$6 = answers[3]) === null || _answers$6 === void 0 ? void 0 : _answers$6.includes(option),\n                onChange: () => handleCheckboxChange3(option)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this), option]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"float-center btn bg-primary text-white\",\n            onClick: handleNextClick,\n            children: \"Find Newsletters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  };\n  const renderRecommendations = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-4\",\n        children: \"Recommended Newsletters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-deck\",\n        children: recommended.map((newsletter, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: newsletter.logo,\n            className: \"card-img-top\",\n            alt: newsletter.name,\n            style: {\n              maxWidth: '100px',\n              margin: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: newsletter.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: newsletter.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              className: \"btn btn-primary\",\n              children: \"Subscribe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-footer bg-primary text-white text-center\",\n            children: [\"Points: \", newsletter.points]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-4 fixed-top\",\n      children: \"Newsletter Recommender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), step <= 1 ? renderQuestion() : renderRecommendations()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"edgJfmlR4gme+AJYCXy0TQ2xLR4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","newsletters","name","logo","description","topic","frequency","content","App","_s","step","setStep","answers","setAnswers","topicOptions","frequencyOptions","contentOptions","handleCheckboxChange","option","prevAnswers","handleCheckboxChange2","handleCheckboxChange3","handleNextClick","console","log","recommendNewsletters","userTopics","userFrequencies","userContentPreference","recommendedNewsletters","map","newsletter","points","forEach","includes","sortedRecommendedNewsletters","sort","a","b","slice","setRecommended","recommended","renderQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_answers$","_answers$2","type","checked","onChange","_answers$3","_answers$4","_answers$5","_answers$6","onClick","renderRecommendations","src","alt","style","maxWidth","margin","href","_c","$RefreshReg$"],"sources":["/Users/srivatsavbendi/Desktop/newsletters/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst newsletters = [\n  // Sample newsletter data with attributes: \"Topic\", \"Frequency\", \"Content Type\"\n  // Replace placeholders with actual data\n  { name: 'Newsletter 1', logo: 'logo1.png', description: 'Description of Newsletter 1', topic: ['Climate', 'Technology'], frequency: ['Daily'], content: 'Short' },\n  { name: 'Newsletter 2', logo: 'logo2.png', description: 'Description of Newsletter 2', topic: ['Travel'], frequency: ['Weekly'], content: 'Medium' },\n  // Add more newsletters...\n];\n\nconst App = () => {\n  const [step, setStep] = useState(1);\n  const [answers, setAnswers] = useState({});\n\n  const topicOptions = ['Climate', 'Technology', 'Business', 'Travel', 'Sports', 'Lifestyle', 'Productivity', 'Arts'];\n  const frequencyOptions = ['Daily', 'Biweekly', 'Weekly'];\n  const contentOptions = ['Short', 'Medium', 'Long'];\n\n  const handleCheckboxChange = (option) => {\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      1: prevAnswers[1] ? [...prevAnswers[1], option] : [option],\n      \n    }));\n  };\n  const handleCheckboxChange2 = (option) => {\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      2: prevAnswers[2] ? [...prevAnswers[2], option] : [option],\n      \n    }));\n  };\n  const handleCheckboxChange3 = (option) => {\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      3: prevAnswers[3] ? [...prevAnswers[3], option] : [option],\n      \n    }));\n  };\n\n  const handleNextClick = () => {\n    setStep(step + 1);\n    console.log(\"Selected topics:\", answers[1]);\n    console.log(\"Selected frequencies:\", answers[2]);\n    console.log(\"Selected topics:\", answers[3]);\n    recommendNewsletters(); \n\n  };\n\n  const recommendNewsletters = () => {\n    const userTopics = answers[1] || [];\n    const userFrequencies = answers[2] || [];\n    const userContentPreference = answers[3];\n\n    const recommendedNewsletters = newsletters.map(newsletter => {\n      let points = 0;\n\n      newsletter.topic.forEach(topic => {\n        if (userTopics.includes(topic)) {\n          points++;\n        }\n      });\n\n      newsletter.frequency.forEach(frequency => {\n        if (userFrequencies.includes(frequency)) {\n          points++;\n        }\n      });\n\n      if (newsletter.content === userContentPreference) {\n        points++;\n      }\n\n      return { ...newsletter, points };\n    });\n\n    const sortedRecommendedNewsletters = recommendedNewsletters.sort((a, b) => b.points - a.points).slice(0, 5);\n    console.log(sortedRecommendedNewsletters);\n    setRecommended(sortedRecommendedNewsletters);\n  };\n\n\n  const [recommended, setRecommended] = useState([]);\n\n  const renderQuestion = () => {\n    return (\n      <div className=\"m-5\">\n        <div>\n          <h2 className=\"m-2\">Pick Topics You're Interested In</h2>\n          <div>\n            {topicOptions.map((option, index) => (\n              <label className={`btn btn-outline-primary m-2 ${answers[1]?.includes(option) ? 'active' : ''}`} key={index}>\n                <input \n                  type=\"checkbox\" \n                  className=\"btn-check\" \n                  checked={answers[1]?.includes(option)}\n                  onChange={() => handleCheckboxChange(option)}\n                />\n                {option}\n              </label>\n            ))}\n          </div>\n        </div>\n      \n\n        <div>\n            <h2 className=\"m-2\">How often would you like to receieve emails?</h2>\n            <div>\n              {frequencyOptions.map((option, index) => (\n                <label className={`btn btn-outline-primary m-2 ${answers[2]?.includes(option) ? 'active' : ''}`} key={index}>\n                  <input \n                    type=\"checkbox\" \n                    className=\"btn-check\" \n                    checked={answers[2]?.includes(option)}\n                    onChange={() => handleCheckboxChange2(option)}\n                  />\n                  {option}\n                </label>\n              ))}\n            </div>\n          </div>\n\n          <div>\n            <h2 className=\"m-2\">What is the ideal length of the email?</h2>\n            <div>\n              {contentOptions.map((option, index) => (\n                <label className={`btn btn-outline-primary m-2 ${answers[3]?.includes(option) ? 'active' : ''}`} key={index}>\n                  <input \n                    type=\"checkbox\" \n                    className=\"btn-check\" \n                    checked={answers[3]?.includes(option)}\n                    onChange={() => handleCheckboxChange3(option)}\n                  />\n                  {option}\n                </label>\n              ))}\n              <button className=\"float-center btn bg-primary text-white\" onClick={handleNextClick}>Find Newsletters</button>\n            </div>\n          </div>\n        </div>\n      );\n\n  };\n\n  const renderRecommendations = () => {\n    return (\n      <div> \n        <h2 className=\"mb-4\">Recommended Newsletters</h2>\n        <div className=\"card-deck\">\n          {recommended.map((newsletter, index) => (\n            <div key={index} className=\"card mb-4\">\n              <img src={newsletter.logo} className=\"card-img-top\" alt={newsletter.name} style={{ maxWidth: '100px', margin: 'auto' }} />\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{newsletter.name}</h5>\n                <p className=\"card-text\">{newsletter.description}</p>\n                <a href=\"#\" className=\"btn btn-primary\">Subscribe</a>\n              </div>\n              <div className=\"card-footer bg-primary text-white text-center\">\n                Points: {newsletter.points}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"mt-4 fixed-top\">Newsletter Recommender</h1>\n      {step <= 1 ? renderQuestion() : renderRecommendations()}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}